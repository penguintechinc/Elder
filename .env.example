# Project Template Environment Configuration

# License Configuration (Required)
LICENSE_KEY=PENG-XXXX-XXXX-XXXX-XXXX-ABCD
PRODUCT_NAME=project-template
LICENSE_SERVER_URL=https://license.penguintech.io

# Database Configuration
POSTGRES_DB=project_template
POSTGRES_USER=postgres
POSTGRES_PASSWORD=secure_password_here
POSTGRES_PORT=5432
DATABASE_URL=postgresql://postgres:secure_password_here@localhost:5432/project_template

# Redis Configuration
REDIS_PASSWORD=redis_password_here
REDIS_PORT=6379
REDIS_URL=redis://:redis_password_here@localhost:6379/0

# Application Ports
API_PORT=8080
WEB_PYTHON_PORT=8000
WEB_NODE_PORT=3000
PROMETHEUS_PORT=9090
GRAFANA_PORT=3001

# Nginx Configuration
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# Go API Configuration
GIN_MODE=debug
LOG_LEVEL=info
VERSION=development

# Python Configuration
PY4WEB_APPS_FOLDER=/app/apps
PY4WEB_HOST=0.0.0.0
PY4WEB_PORT=8000

# Node.js Configuration
NODE_ENV=development
PORT=3000

# Monitoring Configuration
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin_password_here
ALERTMANAGER_PORT=9093
ALERTMANAGER_URL=http://alertmanager:9093

# Alert Configuration
ALERT_EMAIL_CRITICAL=oncall@example.com
ALERT_EMAIL_HIGH=team@example.com
ALERT_EMAIL_INCIDENTS=incidents@example.com
SMTP_HOST=localhost:587
SMTP_FROM=alerts@elder.local
SMTP_USER=
SMTP_PASS=

# JWT Configuration
JWT_SECRET=your_jwt_secret_key_here
JWT_EXPIRATION=24h

# Email Configuration (Optional)
SMTP_SERVER=localhost
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_SENDER=noreply@localhost
SMTP_TLS=true

# Security Configuration
BCRYPT_ROUNDS=12
SESSION_SECRET=your_session_secret_here
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://localhost:8080

# SSL/TLS Configuration
TLS_ENABLED=false
TLS_CERT_PATH=/etc/ssl/certs/server.crt
TLS_KEY_PATH=/etc/ssl/private/server.key

# Cloud Provider Configuration (AWS Example)
AWS_REGION=us-west-2
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=

# Docker Configuration
COMPOSE_PROJECT_NAME=project-template
DOCKER_BUILDKIT=1

# Development Tools
DEBUG=false
ENABLE_PROFILING=false
METRICS_ENABLED=true

# Feature Flags (Example)
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_ENTERPRISE_REPORTS=false
FEATURE_USER_MANAGEMENT=true

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW_MINUTES=15

# Logging Configuration
LOG_FORMAT=json
LOG_FILE_PATH=/var/log/app.log
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10

# Backup Configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=

# Testing Configuration
TEST_DATABASE_URL=postgresql://postgres:test_password@localhost:5432/test_db
TEST_REDIS_URL=redis://:test_password@localhost:6379/15

# Performance Configuration
MAX_CONNECTIONS=100
CONNECTION_TIMEOUT=30s
IDLE_TIMEOUT=15m
READ_TIMEOUT=10s
WRITE_TIMEOUT=10s

# Cache Configuration
CACHE_TTL=300
CACHE_MAX_SIZE=1000
CACHE_CLEANUP_INTERVAL=60s

# ============================================================================
# Elder Connector Service Configuration
# ============================================================================

# Elder API Configuration
ELDER_API_URL=http://api:5000
ELDER_API_KEY=

# ----------------------------------------------------------------------------
# AWS Connector Configuration
# ----------------------------------------------------------------------------
AWS_ENABLED=false
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_REGIONS=us-east-1,us-west-2
AWS_SYNC_INTERVAL=3600

# ----------------------------------------------------------------------------
# GCP Connector Configuration
# ----------------------------------------------------------------------------
GCP_ENABLED=false
GCP_PROJECT_ID=
GCP_CREDENTIALS_PATH=/app/credentials/gcp-credentials.json
GCP_SYNC_INTERVAL=3600

# ----------------------------------------------------------------------------
# Google Workspace Connector Configuration
# ----------------------------------------------------------------------------
GOOGLE_WORKSPACE_ENABLED=false
GOOGLE_WORKSPACE_CREDENTIALS_PATH=/app/credentials/workspace-credentials.json
GOOGLE_WORKSPACE_ADMIN_EMAIL=
GOOGLE_WORKSPACE_CUSTOMER_ID=my_customer
GOOGLE_WORKSPACE_SYNC_INTERVAL=3600

# ----------------------------------------------------------------------------
# LDAP/LDAPS Connector Configuration
# ----------------------------------------------------------------------------
LDAP_ENABLED=false
LDAP_SERVER=
LDAP_PORT=389
LDAP_USE_SSL=false
LDAP_VERIFY_CERT=true
LDAP_BIND_DN=
LDAP_BIND_PASSWORD=
LDAP_BASE_DN=
LDAP_USER_FILTER=(objectClass=person)
LDAP_GROUP_FILTER=(objectClass=group)
LDAP_SYNC_INTERVAL=3600

# ----------------------------------------------------------------------------
# Connector Organization Mapping
# ----------------------------------------------------------------------------
# If set, entities without a mapped organization will be assigned to this org
DEFAULT_ORGANIZATION_ID=

# Auto-create organizations in Elder if they don't exist
CREATE_MISSING_ORGANIZATIONS=true

# ----------------------------------------------------------------------------
# Connector Sync Configuration
# ----------------------------------------------------------------------------
# Run initial sync when connector starts
SYNC_ON_STARTUP=true

# Number of entities to process per batch
SYNC_BATCH_SIZE=100

# Maximum number of retries for failed operations
SYNC_MAX_RETRIES=3

# ----------------------------------------------------------------------------
# Connector Health & Monitoring
# ----------------------------------------------------------------------------
# Port for health check HTTP server
CONNECTOR_HEALTH_PORT=8000

# Enable Prometheus metrics
CONNECTOR_METRICS_ENABLED=true